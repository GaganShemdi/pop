import matplotlib.pyplot as plt
from sklearn.datasets import fetch_olivetti_faces
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import accuracy_score

df=fetch_olivetti_faces()
X =df.data
y =df.target
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=24)

model = GaussianNB().fit(X_train, y_train)
y_pred = model.predict(X_test)

acc = accuracy_score(y_test, y_pred)
print(f"Accuracy:{acc*100}%")

plt.figure(figsize=(10, 3))
for i in range(10):
    plt.subplot(1, 10, i+1)
    plt.imshow(X_test[i].reshape(64, 64), cmap='gray')
    plt.title(f"T:{y_test[i]}\nP:{y_pred[i]}")
    # plt.axis("off")
plt.tight_layout()
plt.show()
